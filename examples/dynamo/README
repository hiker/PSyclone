#-------------------------------------------------------------------------------
# (c) The copyright relating to this work is owned jointly by the Crown,
# Met Office and NERC 2015.
# However, it has been created with the help of the GungHo Consortium,
# whose members are identified at https://puma.nerc.ac.uk/trac/GungHo/wiki
#-------------------------------------------------------------------------------
# Author A. R. Porter, STFC Daresbury Lab

The dynamo examples in the eg1 and eg2 directories below the one
containing this README use the Dynamo 0.1 API. That in eg3 uses
version 0.3 of the Dynamo API. They are primarily provided to
illustrate the use of the PSyclone code-generation system.

In order to use PSyclone you must first add it to your PYTHONPATH. The
simplest way to do this is to change to the top-level directory of your
PSyclone installation and do:
::
    export PYTHONPATH=`pwd`/src:`pwd`/f2py_93

PSyclone can be run for the first two examples by entering the directory and 
executing, e.g.
::
    python ./runme.py

Examine the runme*.py scripts themselves for further details.

The third example can be used to demonstrate PSyclone

1) generating distributed memory parallel code
::
    cd eg3/
    python ../../../src/generator.py solver_mod.x90
    # look for %set_dirty and %halo_exchange in the generated code

2) using a transformation script to perform loop colouring and OpenMP
parallelisation (without distributed memory parallel code)
::
    cd eg3/
    python ../../../src/generator.py -s ./colouring_and_omp.py -nodm solver_mod.x90
