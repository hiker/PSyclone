This directory contains wrapper libraries that can be used with
PSyclone's profiling interface.

template
--------
This is a very simple example library that just prints the name of the
subroutines used (e.g. ProfileStart) and name of the module and region.
It uses the ProfileData variables to make the module and region name
available in the ProfileEnd call.

simple_timing
-------------
This is a simple, stand-alone library that measures the real time of
a region, and prints a summary at the end. It is NOT thread-safe.
The ProfileData type is used to store module name and region,
and time accumulators.
Example output:
===========================================
 module::region                                         count           sum                     min             average                 max
 psy_inputoutput::eliminate_one_node_islands_code           1     0.128906250             0.128906250             0.128906250             0.128906250    
 psy_time_step_mod::swlon_adjust_code                      11      1.19921875             0.105468750             0.109019883             0.113281250    
 psy_time_step_mod::swlon_code                             11      4.38281250             0.394531250             0.398437500             0.406250000    
 psy_time_step_mod::swlon_update_code                      11      1.86718750             0.167968750             0.169744313             0.171875000    
 psy_time_step_mod::swlat_adjust_code                      11      1.23828125             0.109375000             0.112571023             0.117187500    
 psy_time_step_mod::swlat_code                             11      4.87890625             0.437500000             0.443536937             0.445312500    
 psy_time_step_mod::swlat_update_code                      11      1.87500000             0.167968750             0.170454547             0.179687500    
 ===========================================

dl_timer
--------
This is a wrapper library that maps the PSyclone profiling API
to the dl_timer API. A copy of dl_timer can be downloaded from
https://bitbucket.org/apeg/dl_timer
It uses the ProfileData type and dl_timer's timer_register function
to store the module/region name and the index used by dl_timer.
This library is thread-safe.

Example output:
=============================== Timing report ===============================
Timed using POSIX timer. Units are seconds.
Reported resolution =  0.1000E-08 (s)
Effective clock granularity =  0.25997E-07 (s)
Measured systematic error in dl_timer API =  0.37790E-07 +/- 0.789E-09 (s)
Measured overhead in calling start/stop =  0.9411E-07 (s)
Measured overhead in calling start/stop for registered timer =  0.4725E-07 (s)
-----------------------------------------------------------------------------
Region                          Counts     Total       Average*     Std Err
-----------------------------------------------------------------------------
psy_inputoutput:eliminate_one_no     1  0.12603E+00   0.12603E+00  0.00E+00
psy_time_step_mod:swlon_adjust_c    11  0.12201E+01   0.11092E+00  0.28E-02
psy_time_step_mod:swlon_code        11  0.44050E+01   0.40046E+00  0.25E-02
psy_time_step_mod:swlon_update_c    11  0.18761E+01   0.17056E+00  0.45E-03
psy_time_step_mod:swlat_adjust_c    11  0.12325E+01   0.11204E+00  0.53E-03
psy_time_step_mod:swlat_code        11  0.50031E+01   0.45483E+00  0.26E-02
psy_time_step_mod:swlat_update_c    11  0.19000E+01   0.17272E+00  0.24E-02
-----------------------------------------------------------------------------
* corrected for systematic error
=============================================================================
